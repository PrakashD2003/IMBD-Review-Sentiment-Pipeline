# ---------- Build stage ----------
FROM python:3.12-slim AS build
WORKDIR /app

# Install build tools only for this stage
RUN apt-get update && apt-get install -y --no-install-recommends gcc build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy and install dependencies into an isolated virtualenv
COPY ./requirements-prediction.txt .
RUN python -m venv /opt/venv && . /opt/venv/bin/activate \
    && pip install --no-cache-dir -r requirements-prediction.txt

# Copy your application code into the build stage
COPY ./services/prediction /app/services/prediction
COPY ./common /app/common
COPY params.yaml /app



# ---------- Runtime stage ----------
FROM python:3.12-slim AS runtime
WORKDIR /app

# Copy the virtual environment and application code from the build stage
COPY --from=build /opt/venv /opt/venv
COPY --from=build /app /app

# Point PATH at the copied virtual environment so your app uses those packages
ENV PATH="/opt/venv/bin:$PATH"

# Expose your service port (adjust if needed)
EXPOSE 8000

# Define the command to run your service (update to your module)
CMD ["uvicorn", "services.prediction.api_end_point.prediction_fastapi_app:app", "--host", "0.0.0.0", "--port", "8000"]
